[1mdiff --git a/SRC/Data_Preparation.R b/SRC/Data_Preparation.R[m
[1mindex 5dd8eb4..6c64de2 100644[m
[1m--- a/SRC/Data_Preparation.R[m
[1m+++ b/SRC/Data_Preparation.R[m
[36m@@ -42,31 +42,6 @@[m [mprint('series and episode votes: NA filtered')[m
 colnames(filtered_data) = c( "episode_id", "show_id", "season_number", "episode_number", "is_for_adult", "start_year", "end_year", "episode_minutes", "genres", "rating", "n_votes")[m
 print('Raw_data is cleaned')[m
 [m
[31m-# Creating the independent variable for the linear regression[m
[31m-# Converting episode_minutes from character to numeric values[m
[31m-filtered_data$episode_minutes <- as.numeric(as.character(filtered_data$episode_minutes))[m
[31m-[m
[31m-# Arranging by series, season number, and episode number[m
[31m-filtered_data <- filtered_data %>%[m
[31m-  arrange(show_id, season_number, episode_number)[m
[31m-[m
[31m-# Calculating the cumulative runtime within each series and season[m
[31m-filtered_data <- filtered_data %>%[m
[31m-  group_by(show_id, season_number) %>%[m
[31m-  mutate(season_runtime = cumsum(episode_minutes) - episode_minutes)[m
[31m-[m
[31m-# Calculating the total runtime of previous seasons within series[m
[31m-filtered_data <- filtered_data %>%[m
[31m-  group_by(show_id) %>%[m
[31m-  mutate(prev_season_runtime = lag(cumsum(episode_minutes), default = 0))[m
[31m-[m
[31m-# Create the totalSeries_Runtime variable[m
[31m-filtered_data <- filtered_data %>%[m
[31m-  mutate(series_runtime = season_runtime + prev_season_runtime)[m
[31m-[m
[31m-write.csv(filtered_data, here("gen", "data_preparation", "output", "cleaned_data.csv"), row.names = FALSE)[m
[31m-[m
[31m-2c966ebc706abe853da52c0565d381f04185af61[m
 [m
 ### Output ###[m
 # Saving the alterations to a new file called cleaned_data.csv[m
